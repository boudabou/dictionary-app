{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","components/table.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Component","Boolean","window","location","hostname","match","selectRowProp","mode","cellEditProps","blurToSave","EditColumnClassTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tab_id","button_group_id","error_id","error_div_id","button_check_prefix","low_opacity","high_opacity","data","conflicts","chains","duplicates","onAfterDeleteRow","bind","assertThisInitialized","onAfterInsertRow","domainValidator","rangeValidator","addButton","validateButtons","getConflicts","resetButtons","updateConflicts","getDomainRangeForId","id","entry","findIndex","a","domain","range","rowKeys","_this2","newData","newDuplicates","indexOf","push","element","document","getElementById","parentNode","removeChild","dup","dup_","filter","value","index","arr","length","newState","computeChains","setState","setTimeout","row","left","entry2","right","test","newChains","inspectedIndices","chain1","includes","chain2","chain1_","chain2_","shift","concat","chain","chainsToProcess","i","pop","containsLoop","idx","node","idx2","slice","parseInt","subchain1","subchain2","subchain3","_this3","isValid","notification","type","msg","title","importance","_this4","splice","_this5","forEach","elem","className","innerHTML","style","opacity","chainString","reduce","accumulator","currentValue","typeProblem","suffix","substring","numWarnings","x","numErrors","id_button","_this6","validation","cell","createElement","addEventListener","appendChild","props","react_default","class","lib","cellEdit","insertRow","search","options","afterInsertRow","afterDeleteRow","deleteRow","selectRow","exportCSV","dataField","isKey","dataFormat","idFormatter","domainFormatter","editable","validator","rangeFormatter","numTables","onclick","ReactDOM","render","onClick","table","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.382020ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\n\nconst selectRowProp = {\n  mode: \"checkbox\"\n};\n\nconst cellEditProps = {\n  mode: \"click\",\n  blurToSave: true\n};\n\nclass EditColumnClassTable extends Component {\n  state = {\n    tab_id: null,\n    button_group_id: null,\n    error_id: null,\n    error_div_id: null,\n    button_check_prefix: null,\n    low_opacity: 0.5,\n    high_opacity: 1,\n    data: [],\n    conflicts: { chains: [], duplicates: [] }\n  };\n\n  getDomainRangeForId(id) {\n    var entry = this.state.data[this.state.data.findIndex(a => a.id === id)];\n    return [entry.domain, entry.range];\n  }\n\n  onAfterDeleteRow(rowKeys) {\n    var newData = [];\n    var newDuplicates = [];\n    for (var entry in this.state.data) {\n      let idx = rowKeys.indexOf(this.state.data[entry].id);\n      if (idx === -1) {\n        newData.push(this.state.data[entry]);\n      } else {\n        var element = document.getElementById(\n          this.state.button_check_prefix + this.state.data[entry].id\n        );\n        element.parentNode.removeChild(element);\n      }\n    }\n    for (var dup in this.state.conflicts.duplicates) {\n      var dup_ = this.state.conflicts.duplicates[dup];\n      dup_ = dup_.filter(function(value, index, arr) {\n        return rowKeys.indexOf(value) === -1;\n      });\n      if (dup_.length > 0) newDuplicates.push(dup_);\n    }\n    let newState = this.state;\n    newState.data = newData;\n    newState.conflicts.duplicates = newDuplicates;\n    this.computeChains();\n    this.setState(newState);\n    setTimeout(() => {\n      this.resetButtons();\n    }, 200);\n  }\n\n  onAfterInsertRow(row) {\n    let newState = this.state;\n    newState.data.push(row);\n    this.updateConflicts(row);\n    this.setState(newState);\n    this.computeChains();\n    this.addButton(row.id);\n  }\n\n  computeChains() {\n    var chains = [];\n    for (var entry in this.state.data) {\n      var left = this.state.data[entry];\n      for (var entry2 in this.state.data) {\n        var right = this.state.data[entry2];\n        if (left.id === right.id) continue;\n        if (left.range === right.domain) {\n          chains.push([left.id, right.id]);\n        }\n      }\n    }\n    let test = true;\n\n    while (test) {\n      var newChains = [];\n      var inspectedIndices = [];\n      test = false;\n      for (var chain1 in chains) {\n        if (inspectedIndices.includes(chain1)) continue;\n        for (var chain2 in chains) {\n          if (chain2 <= chain1 || inspectedIndices.includes(chain2)) continue;\n          var chain1_ = chains[chain1];\n          var chain2_ = chains[chain2];\n          if (chain1_[0] === chain2_[chain2_.length - 1]) {\n            var left = chain2_[0];\n            var right = chain1_[chain1_.length - 1];\n            chain1_.shift();\n            newChains.push(chain2_.concat(chain1_));\n            test = true;\n            inspectedIndices = inspectedIndices.concat([chain1, chain2]);\n            continue;\n          }\n\n          if (chain1_[chain1_.length - 1] === chain2_[0]) {\n            chain2_.shift();\n            newChains.push(chain1_.concat(chain2_));\n            test = true;\n            inspectedIndices = inspectedIndices.concat([chain1, chain2]);\n            continue;\n          }\n        }\n      }\n      for (var chain in chains) {\n        if (!inspectedIndices.includes(chain)) {\n          newChains.push(chains[chain]);\n        }\n      }\n      chains = newChains;\n    }\n\n    var chainsToProcess = chains;\n    newChains = [];\n\n    var i = 0;\n    while (chainsToProcess.length > 0 && i < 10) {\n      i += 1;\n      chain = chainsToProcess.pop();\n      if (chain[0] === chain[chain.length - 1]) {\n        newChains.push(chain);\n        continue;\n      }\n      var containsLoop = false;\n\n      for (var idx in chain) {\n        var node = chain[idx];\n        var idx2 = chain.slice(idx + 1, chain.length).indexOf(node);\n        if (idx2 > 0) {\n          idx2 = parseInt(idx2) + parseInt(idx) + 1;\n          var subchain1 = chain.slice(0, idx + 1);\n          if (subchain1.length > 1) chainsToProcess.push(subchain1);\n          var subchain2 = chain.slice(idx, idx2 + 1);\n          if (subchain2.length > 1) chainsToProcess.push(subchain2);\n          var subchain3 = chain.slice(idx2, chain.length);\n          if (subchain3.length > 1) chainsToProcess.push(subchain3);\n          containsLoop = true;\n          break;\n        }\n      }\n      if (!containsLoop) newChains.push(chain);\n    }\n\n    //this.state.conflicts.loops = loops;\n    this.state.conflicts.chains = newChains;\n    this.setState(this.state);\n  }\n\n  rangeValidator(value, row) {\n    const index = this.state.data.findIndex(a => a.id === row.id);\n    if (index > -1) {\n      setTimeout(() => {\n        this.computeChains();\n        this.resetButtons();\n      }, 200);\n    }\n    return {\n      isValid: true,\n      notification: { type: \"success\", msg: \"\", title: \"\", importance: 0 },\n      conflicts: []\n    };\n  }\n\n  domainValidator(value, row) {\n    let index = this.state.data.findIndex(a => a.id === row.id);\n    if (index > -1) {\n      // This is an edit of the domain\n      var newDuplicates = [];\n      for (var dup in this.state.conflicts.duplicates) {\n        var dup_ = this.state.conflicts.duplicates[dup];\n        index = dup_.indexOf(row.id);\n        if (index > -1) {\n          dup_.splice(index, 1);\n        }\n        if (dup_.length > 0) newDuplicates.push(dup_);\n      }\n      this.state.conflicts.duplicates = newDuplicates;\n\n      setTimeout(() => {\n        this.updateConflicts(row);\n        this.computeChains();\n        this.resetButtons();\n      }, 200);\n    }\n    return {\n      isValid: true,\n      notification: { type: \"success\", msg: \"\", title: \"\", importance: 0 },\n      conflicts: []\n    };\n  }\n\n  updateConflicts(row) {\n    var domain = row.domain;\n    let currentDomain = null;\n    let test = true;\n    for (var dup in this.state.conflicts.duplicates) {\n      var dup_ = this.state.conflicts.duplicates[dup];\n      currentDomain = this.state.data[\n        this.state.data.findIndex(a => a.id === dup_[0])\n      ].domain;\n      if (domain === currentDomain) {\n        dup_.push(row.id);\n        test = false;\n        break;\n      }\n    }\n    if (test) {\n      this.state.conflicts.duplicates.push([row.id]);\n    }\n  }\n\n  getConflicts(id) {\n    //get conflicts for an id\n    let duplicates = [];\n    let chains = [];\n    for (var dup in this.state.conflicts.duplicates) {\n      var dup_ = this.state.conflicts.duplicates[dup];\n      if (dup_.indexOf(id) > -1) {\n        duplicates = dup_;\n        break;\n      }\n    }\n    for (var chain in this.state.conflicts.chains) {\n      var dup_ = this.state.conflicts.chains[chain];\n      if (dup_.indexOf(id) > -1) {\n        chains = dup_;\n        break;\n      }\n    }\n    return { id: id, duplicates: duplicates, chains: chains };\n  }\n\n  validateButtons(id) {\n    //on hover show all conflicts\n    var conflicts = this.getConflicts(id);\n    var dup = false;\n    var chain = false;\n    if (conflicts.duplicates.length > 1) {\n      dup = true;\n      conflicts.duplicates.forEach(id => {\n        var elem = document.getElementById(this.state.button_check_prefix + id);\n        if (elem) {\n          elem.className = \"check warning\";\n          elem.innerHTML = \"×\";\n          elem.style.opacity = this.state.high_opacity;\n        }\n      });\n    }\n\n    if (conflicts.chains.length > 1) {\n      chain = true;\n      conflicts.chains.forEach(id => {\n        var elem = document.getElementById(this.state.button_check_prefix + id);\n        if (elem) {\n          elem.className = \"check error\";\n          elem.innerHTML = \"×\";\n          elem.style.opacity = this.state.high_opacity;\n        }\n      });\n    }\n\n    if (chain) {\n      const reducer = (accumulator, currentValue) =>\n        accumulator + \" id(\" + currentValue + \") =>\";\n      var chainString = conflicts.chains.reduce(reducer, \"\");\n      var typeProblem = \"Chain\";\n      var suffix = \"\";\n      if (\n        conflicts.chains[0] === conflicts.chains[conflicts.chains.length - 1]\n      ) {\n        typeProblem = \"Loop\";\n        suffix = \"...\";\n      }\n      document.getElementById(this.state.error_div_id).className =\n        \"alert alert-danger\";\n      document.getElementById(this.state.error_id).innerHTML =\n        typeProblem +\n        \" error: \" +\n        chainString.substring(0, chainString.length - 3) +\n        suffix;\n      return [\"check error\", \"×\"];\n    } else {\n      if (dup) {\n        document.getElementById(this.state.error_div_id).className =\n          \"alert alert-warning\";\n        document.getElementById(this.state.error_id).innerHTML =\n          \"Duplicated Domain: \" +\n          this.state.data[this.state.data.findIndex(a => a.id === id)].domain;\n        return [\"check warning\", \"×\"];\n      } else {\n        var elem = document.getElementById(this.state.button_check_prefix + id);\n        if (elem) elem.style.opacity = this.state.high_opacity;\n        document.getElementById(this.state.error_div_id).className =\n          \"alert alert-success\";\n        document.getElementById(this.state.error_id).innerHTML = \"Valid entry\";\n        return [\"check valid\", \"✓\"];\n      }\n    }\n  }\n\n  resetButtons() {\n    //read all the data and update the current state of buttons\n    var numWarnings = this.state.conflicts.duplicates.filter(x => x.length > 1)\n      .length;\n    var numErrors = this.state.conflicts.chains.length;\n    if (numWarnings === 0 && numErrors === 0) {\n      document.getElementById(this.state.error_div_id).className =\n        \"alert alert-success\";\n      document.getElementById(this.state.error_id).innerHTML =\n        \"Conflicts free dictionary\";\n    } else {\n      if (numErrors === 0) {\n        document.getElementById(this.state.error_div_id).className =\n          \"alert alert-warning\";\n        document.getElementById(this.state.error_id).innerHTML =\n          numWarnings + \" duplicated domains in this dictionary\";\n      } else {\n        document.getElementById(this.state.error_div_id).className =\n          \"alert alert-danger\";\n        document.getElementById(this.state.error_id).innerHTML =\n          numErrors +\n          \" error\" +\n          (numErrors > 1 ? \"s\" : \"\") +\n          \" in this dictionary\";\n      }\n    }\n    for (var entry in this.state.data) {\n      var id_button =\n        this.state.button_check_prefix + this.state.data[entry].id;\n      var elem = document.getElementById(id_button);\n      var test = true;\n      for (var dup in this.state.conflicts.duplicates) {\n        var dup_ = this.state.conflicts.duplicates[dup];\n        if (dup_.indexOf(this.state.data[entry].id) > -1 && dup_.length > 1) {\n          elem.className = \"check warning\";\n          elem.innerHTML = \"×\";\n          elem.style.opacity = this.state.low_opacity;\n          test = false;\n          break;\n        }\n      }\n\n      for (var chain in this.state.conflicts.chains) {\n        var chain_ = this.state.conflicts.chains[chain];\n        if (chain_.indexOf(this.state.data[entry].id) > -1) {\n          elem.className = \"check error\";\n          elem.innerHTML = \"×\";\n          elem.style.opacity = this.state.low_opacity;\n          test = false;\n          break;\n        }\n      }\n\n      if (test) {\n        elem.className = \"check valid\";\n        elem.innerHTML = \"✓\";\n        elem.style.opacity = this.state.low_opacity;\n      }\n    }\n  }\n\n  addButton(id) {\n    // add a new button to the button group\n    var validation = this.validateButtons(id);\n    var cell = document.createElement(\"button\");\n    cell.id = this.state.button_check_prefix + id;\n    cell.className = validation[0];\n    cell.innerHTML = validation[1];\n    cell.type = \"button\";\n    cell.addEventListener(\"mouseover\", () => this.validateButtons(id));\n    cell.addEventListener(\"mouseout\", () => this.resetButtons());\n    document.getElementById(this.state.button_group_id).appendChild(cell);\n    document.getElementById(\n      this.state.error_div_id\n    ).style.opacity = this.state.high_opacity;\n  }\n\n  constructor() {\n    super();\n    this.onAfterDeleteRow = this.onAfterDeleteRow.bind(this);\n    this.onAfterInsertRow = this.onAfterInsertRow.bind(this);\n    this.domainValidator = this.domainValidator.bind(this);\n    this.rangeValidator = this.rangeValidator.bind(this);\n    this.addButton = this.addButton.bind(this);\n    this.validateButtons = this.validateButtons.bind(this);\n    this.getConflicts = this.getConflicts.bind(this);\n    this.resetButtons = this.resetButtons.bind(this);\n    this.updateConflicts = this.updateConflicts.bind(this);\n    this.getDomainRangeForId = this.getDomainRangeForId.bind(this);\n  }\n\n  render() {\n    this.state.button_group_id = \"button-group-\" + this.props.tab_id;\n    this.state.tab_id = this.props.tab_id;\n    this.state.error_div_id = \"error-div-\" + this.props.tab_id;\n    this.state.error_id = \"error-\" + this.props.tab_id;\n    this.state.button_check_prefix = this.props.tab_id + \"-check-\";\n    return (\n      <div>\n        <div class=\"button-wrapper\">\n          <div\n            id={this.state.button_group_id}\n            class=\"btn-group-vertical mr-2-lg\"\n          />\n        </div>\n        <div class=\"table-wrapper\">\n          <BootstrapTable\n            data={this.state.data}\n            cellEdit={cellEditProps}\n            insertRow={true}\n            search={true}\n            options={{\n              afterInsertRow: this.onAfterInsertRow,\n              afterDeleteRow: this.onAfterDeleteRow\n            }}\n            deleteRow={true}\n            selectRow={selectRowProp}\n            exportCSV={true}\n          >\n            <TableHeaderColumn\n              dataField=\"id\"\n              isKey\n              dataFormat={this.idFormatter}\n            >\n              ID\n            </TableHeaderColumn>\n            <TableHeaderColumn\n              dataField=\"domain\"\n              dataFormat={this.domainFormatter}\n              editable={{ validator: this.domainValidator }}\n            >\n              Domain\n            </TableHeaderColumn>\n            <TableHeaderColumn\n              dataField=\"range\"\n              editable={{ validator: this.rangeValidator }}\n              dataFormat={this.rangeFormatter}\n            >\n              Range\n            </TableHeaderColumn>\n          </BootstrapTable>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditColumnClassTable;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport EditColumnClassTable from \"./components/table\";\n\nvar numTables = 1;\n\ndocument.getElementById(\"addTableButton\").onclick = addEntry;\n\nfunction addEntry() {\n  numTables += 1;\n  var cell = document.createElement(\"div\");\n  cell.className = \"grid-item\";\n  cell.id = numTables;\n  document.getElementById(\"grid\").appendChild(cell);\n  ReactDOM.render(\n    <div>\n      <div className=\"button-div\">\n        <button\n          type=\"button\"\n          className=\"close\"\n          onClick={() => {\n            var element = document.getElementById(cell.id);\n            element.parentNode.removeChild(element);\n          }}\n        >\n          ×\n        </button>\n      </div>\n      <div>\n        <div id={\"error-div-\" + cell.id} className=\"empyt-error\">\n          <p id={\"error-\" + cell.id} />\n        </div>\n        <EditColumnClassTable tab_id={cell.id} />\n      </div>\n    </div>,\n    document.getElementById(numTables)\n  );\n}\n\n//ReactDOM.render(<Tooltip x={\"ok\"} />, document.getElementById(\"test\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}